{"ast":null,"code":"var _jsxFileName = \"/home/barbarik/js/feedback-app/src/components/FeedbackStats.jsx\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FeedbackStats(_ref) {\n  let {\n    feedback\n  } = _ref;\n  let average = feedback.reduce((acc, cur) => {\n    return acc + cur.rating;\n  }, 0) / feedback.length;\n  average = average.toFixed(1).replace(/[.,]0$/, '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [feedback.length, \" Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Average Rating : \", isNaN(average) ? 0 : average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_c = FeedbackStats;\nFeedbackStats.propTypes = {\n  feeedback: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    rating: PropTypes.number,\n    text: PropTypes.string\n  })).isRequired\n};\nexport default FeedbackStats;\nvar _c;\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"names":["PropTypes","FeedbackStats","feedback","average","reduce","acc","cur","rating","length","toFixed","replace","isNaN","propTypes","feeedback","arrayOf","shape","id","number","text","string","isRequired"],"sources":["/home/barbarik/js/feedback-app/src/components/FeedbackStats.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\n\nfunction FeedbackStats({ feedback }) {\n    let average = feedback.reduce((acc, cur) => {\n        return acc+cur.rating\n    }, 0) / feedback.length\n    \n    average=average.toFixed(1).replace(/[.,]0$/,'')\n    \n    return (\n      <div className=\"feedback-stats\">\n        <h4>{feedback.length} Reviews</h4>\n        <h4>Average Rating : {isNaN(average) ? 0 : average}</h4>\n    </div>\n  )\n}\n\nFeedbackStats.propTypes = {\n    feeedback: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        rating: PropTypes.number,\n        text: PropTypes.string\n      }\n\n      )\n    ).isRequired\n}\n\nexport default FeedbackStats"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAAA;AAElC,SAASC,aAAa,OAAe;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC/B,IAAIC,OAAO,GAAGD,QAAQ,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IACxC,OAAOD,GAAG,GAACC,GAAG,CAACC,MAAM;EACzB,CAAC,EAAE,CAAC,CAAC,GAAGL,QAAQ,CAACM,MAAM;EAEvBL,OAAO,GAACA,OAAO,CAACM,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAC,EAAE,CAAC;EAE/C,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAA,WAAKR,QAAQ,CAACM,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eAClC;MAAA,gCAAsBG,KAAK,CAACR,OAAO,CAAC,GAAG,CAAC,GAAGA,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACtD;AAEV;AAAC,KAbQF,aAAa;AAetBA,aAAa,CAACW,SAAS,GAAG;EACtBC,SAAS,EAAEb,SAAS,CAACc,OAAO,CAC1Bd,SAAS,CAACe,KAAK,CAAC;IACdC,EAAE,EAAEhB,SAAS,CAACiB,MAAM;IACpBV,MAAM,EAAEP,SAAS,CAACiB,MAAM;IACxBC,IAAI,EAAElB,SAAS,CAACmB;EAClB,CAAC,CAEA,CACF,CAACC;AACN,CAAC;AAED,eAAenB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}